{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@supabase/supabase-js/dist/module/lib/version.js","../../node_modules/@supabase/supabase-js/dist/module/lib/constants.js","../../node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/constants.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/cookies.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js","../../node_modules/@supabase/gotrue-js/dist/module/GoTrueApi.js","../../node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/types.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestTransformBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestFilterBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestQueryBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestRpcBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/version.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/constants.js","../../node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js","../../node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","../../node_modules/es5-ext/global.js","../../node_modules/websocket/lib/browser.js","../../node_modules/websocket/lib/version.js","../../node_modules/@supabase/realtime-js/dist/module/lib/version.js","../../node_modules/@supabase/realtime-js/dist/module/lib/constants.js","../../node_modules/@supabase/realtime-js/dist/module/lib/timer.js","../../node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","../../node_modules/@supabase/realtime-js/dist/module/lib/push.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeSubscription.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseRealtimeClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseQueryBuilder.js","../../node_modules/@supabase/storage-js/dist/module/lib/version.js","../../node_modules/@supabase/storage-js/dist/module/lib/constants.js","../../node_modules/@supabase/storage-js/dist/module/lib/fetch.js","../../node_modules/@supabase/storage-js/dist/module/lib/helpers.js","../../node_modules/@supabase/storage-js/dist/module/lib/StorageBucketApi.js","../../node_modules/@supabase/storage-js/dist/module/lib/StorageFileApi.js","../../node_modules/@supabase/storage-js/dist/module/StorageClient.js","../../node_modules/@supabase/functions-js/dist/module/helper.js","../../node_modules/@supabase/functions-js/dist/module/index.js","../../node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","../../node_modules/@supabase/supabase-js/dist/module/index.js","../../src/supabaseClient.js","../../node_modules/svelte/store/index.mjs","../../src/App.svelte","../../src/main.js","../../node_modules/cross-fetch/dist/browser-ponyfill.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","export const version = '1.35.4';\n//# sourceMappingURL=version.js.map","// constants.ts\nimport { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` };\nexport const STORAGE_KEY = 'supabase.auth.token';\n//# sourceMappingURL=constants.js.map","// helpers.ts\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function stripTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n}\nexport const isBrowser = () => typeof window !== 'undefined';\n//# sourceMappingURL=helpers.js.map","import { version } from './version';\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const EXPIRY_MARGIN = 10; // in seconds\nexport const NETWORK_FAILURE = {\n    ERROR_MESSAGE: 'Request Failed',\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2, // in deciseconds\n};\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const COOKIE_OPTIONS = {\n    name: 'sb',\n    lifetime: 60 * 60 * 8,\n    domain: '',\n    path: '/',\n    sameSite: 'lax',\n};\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { NETWORK_FAILURE } from './constants';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (!(error === null || error === void 0 ? void 0 : error.status)) {\n        return reject({ message: NETWORK_FAILURE.ERROR_MESSAGE });\n    }\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'text/plain;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return params;\n};\nfunction _handleRequest(fetcher, method, url, options, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options);\n    });\n}\nexport function post(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, body);\n    });\n}\nexport function put(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, body);\n    });\n}\nexport function remove(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n    const opt = options || {};\n    const enc = encodeURIComponent;\n    /* eslint-disable-next-line no-control-regex */\n    const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    if (typeof enc !== 'function') {\n        throw new TypeError('option encode is invalid');\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError('argument name is invalid');\n    }\n    const value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError('argument val is invalid');\n    }\n    let str = name + '=' + value;\n    if (null != opt.maxAge) {\n        const maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError('option maxAge is invalid');\n        }\n        str += '; Max-Age=' + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError('option domain is invalid');\n        }\n        str += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError('option path is invalid');\n        }\n        str += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n        if (typeof opt.expires.toUTCString !== 'function') {\n            throw new TypeError('option expires is invalid');\n        }\n        str += '; Expires=' + opt.expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += '; HttpOnly';\n    }\n    if (opt.secure) {\n        str += '; Secure';\n    }\n    if (opt.sameSite) {\n        const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n            case 'lax':\n                str += '; SameSite=Lax';\n                break;\n            case 'strict':\n                str += '; SameSite=Strict';\n                break;\n            case 'none':\n                str += '; SameSite=None';\n                break;\n            default:\n                throw new TypeError('option sameSite is invalid');\n        }\n    }\n    return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req) {\n    if (!req || !req.headers || !req.headers.host) {\n        throw new Error('The \"host\" request header is not available');\n    }\n    const host = (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host;\n    if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n        return false;\n    }\n    return true;\n}\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie, secure) {\n    var _a, _b, _c;\n    return serialize(cookie.name, cookie.value, {\n        maxAge: cookie.maxAge,\n        expires: new Date(Date.now() + cookie.maxAge * 1000),\n        httpOnly: true,\n        secure,\n        path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n        domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n        sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax',\n    });\n}\n/**\n * Get Cookie Header strings.\n */\nexport function getCookieString(req, res, cookies) {\n    const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)));\n    const previousCookies = res.getHeader('Set-Cookie');\n    if (previousCookies) {\n        if (previousCookies instanceof Array) {\n            Array.prototype.push.apply(strCookies, previousCookies);\n        }\n        else if (typeof previousCookies === 'string') {\n            strCookies.push(previousCookies);\n        }\n    }\n    return strCookies;\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req, res, cookies) {\n    res.setHeader('Set-Cookie', getCookieString(req, res, cookies));\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req, res, cookie) {\n    setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n    setCookie(req, res, {\n        name,\n        value: '',\n        maxAge: -1,\n    });\n}\n//# sourceMappingURL=cookies.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function getParameterByName(name, url) {\n    var _a;\n    if (!url)\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n    // eslint-disable-next-line no-useless-escape\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\n    if (!results)\n        return null;\n    if (!results[2])\n        return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n// LocalStorage helpers\nexport const setItemAsync = (storage, key, data) => __awaiter(void 0, void 0, void 0, function* () {\n    isBrowser() && (yield (storage === null || storage === void 0 ? void 0 : storage.setItem(key, JSON.stringify(data))));\n});\nexport const getItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    const value = isBrowser() && (yield (storage === null || storage === void 0 ? void 0 : storage.getItem(key)));\n    if (!value)\n        return null;\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n});\nexport const getItemSynchronously = (storage, key) => {\n    const value = isBrowser() && (storage === null || storage === void 0 ? void 0 : storage.getItem(key));\n    if (!value || typeof value !== 'string') {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n};\nexport const removeItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    isBrowser() && (yield (storage === null || storage === void 0 ? void 0 : storage.removeItem(key)));\n});\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, put, remove } from './lib/fetch';\nimport { COOKIE_OPTIONS } from './lib/constants';\nimport { setCookies, getCookieString } from './lib/cookies';\nimport { expiresAt, resolveFetch } from './lib/helpers';\nexport default class GoTrueApi {\n    constructor({ url = '', headers = {}, cookieOptions, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.cookieOptions = Object.assign(Object.assign({}, COOKIE_OPTIONS), cookieOptions);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Create a temporary object with all configured headers and\n     * adds the Authorization token to be used on request methods\n     * @param jwt A valid, logged-in JWT.\n     */\n    _createRequestHeaders(jwt) {\n        const headers = Object.assign({}, this.headers);\n        headers['Authorization'] = `Bearer ${jwt}`;\n        return headers;\n    }\n    cookieName() {\n        var _a;\n        return (_a = this.cookieOptions.name) !== null && _a !== void 0 ? _a : '';\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    getUrlForProvider(provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            const query = new URLSearchParams(options.queryParams);\n            urlParams.push(`${query}`);\n        }\n        return `${this.url}/authorize?${urlParams.join('&')}`;\n    }\n    /**\n     * Creates a new user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUpWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString = '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/signup${queryString}`, {\n                    email,\n                    password,\n                    data: options.data,\n                    gotrue_meta_security: { captcha_token: options.captchaToken },\n                }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    signInWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '?grant_type=password';\n                if (options.redirectTo) {\n                    queryString += '&redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { email, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Signs up a new user using their phone number and a password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     * @param data Optional user metadata.\n     */\n    signUpWithPhone(phone, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/signup`, {\n                    phone,\n                    password,\n                    data: options.data,\n                    gotrue_meta_security: { captcha_token: options.captchaToken },\n                }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their phone number and password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     */\n    signInWithPhone(phone, password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const queryString = '?grant_type=password';\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { phone, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an OpenID Connect user using their id_token.\n     * @param id_token The IDToken of the user.\n     * @param nonce The nonce of the user. The nonce is a random value generated by the developer (= yourself) before the initial grant is started. You should check the OpenID Connect specification for details. https://openid.net/developers/specs/\n     * @param provider The provider of the user.\n     * @param client_id The clientID of the user.\n     * @param issuer The issuer of the user.\n     */\n    signInWithOpenIDConnect({ id_token, nonce, client_id, issuer, provider, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const queryString = '?grant_type=id_token';\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { id_token, nonce, client_id, issuer, provider }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a magic login link to an email address.\n     * @param email The email address of the user.\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    sendMagicLinkEmail(email, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const shouldCreateUser = (_a = options.shouldCreateUser) !== null && _a !== void 0 ? _a : true;\n                const data = yield post(this.fetch, `${this.url}/otp${queryString}`, {\n                    email,\n                    create_user: shouldCreateUser,\n                    gotrue_meta_security: { captcha_token: options.captchaToken },\n                }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a mobile OTP via SMS. Will register the account if it doesn't already exist\n     * @param phone The user's phone number WITH international prefix\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     */\n    sendMobileOTP(phone, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const shouldCreateUser = (_a = options.shouldCreateUser) !== null && _a !== void 0 ? _a : true;\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/otp`, {\n                    phone,\n                    create_user: shouldCreateUser,\n                    gotrue_meta_security: { captcha_token: options.captchaToken },\n                }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield post(this.fetch, `${this.url}/logout`, {}, { headers: this._createRequestHeaders(jwt), noResolveJson: true });\n                return { error: null };\n            }\n            catch (e) {\n                return { error: e };\n            }\n        });\n    }\n    /**\n     * @deprecated Use `verifyOTP` instead!\n     * @param phone The user's phone number WITH international prefix\n     * @param token token that user was sent to their mobile phone\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyMobileOTP(phone, token, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/verify`, { phone, token, type: 'sms', redirect_to: options.redirectTo }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Send User supplied Email / Mobile OTP to be verified\n     * @param email The user's email address\n     * @param phone The user's phone number WITH international prefix\n     * @param token token that user was sent to their mobile phone\n     * @param type verification type that the otp is generated for\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyOTP({ email, phone, token, type = 'sms' }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/verify`, { email, phone, token, type, redirect_to: options.redirectTo }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/invite${queryString}`, { email, data: options.data }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a reset request to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/recover${queryString}`, { email, gotrue_meta_security: { captcha_token: options.captchaToken } }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/token?grant_type=refresh_token`, { refresh_token: refreshToken }, { headers: this.headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Set/delete the auth cookie based on the AuthChangeEvent.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     * @param req The request object.\n     * @param res The response object.\n     */\n    setAuthCookie(req, res) {\n        if (req.method !== 'POST') {\n            res.setHeader('Allow', 'POST');\n            res.status(405).end('Method Not Allowed');\n        }\n        const { event, session } = req.body;\n        if (!event)\n            throw new Error('Auth event missing!');\n        if (event === 'SIGNED_IN') {\n            if (!session)\n                throw new Error('Auth session missing!');\n            setCookies(req, res, [\n                { key: 'access-token', value: session.access_token },\n                { key: 'refresh-token', value: session.refresh_token },\n            ].map((token) => {\n                var _a;\n                return ({\n                    name: `${this.cookieName()}-${token.key}`,\n                    value: token.value,\n                    domain: this.cookieOptions.domain,\n                    maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                    path: this.cookieOptions.path,\n                    sameSite: this.cookieOptions.sameSite,\n                });\n            }));\n        }\n        if (event === 'SIGNED_OUT') {\n            setCookies(req, res, ['access-token', 'refresh-token'].map((key) => ({\n                name: `${this.cookieName()}-${key}`,\n                value: '',\n                maxAge: -1,\n            })));\n        }\n        res.status(200).json({});\n    }\n    /**\n     * Deletes the Auth Cookies and redirects to the\n     * @param req The request object.\n     * @param res The response object.\n     * @param options Optionally specify a `redirectTo` URL in the options.\n     */\n    deleteAuthCookie(req, res, { redirectTo = '/' }) {\n        setCookies(req, res, ['access-token', 'refresh-token'].map((key) => ({\n            name: `${this.cookieName()}-${key}`,\n            value: '',\n            maxAge: -1,\n        })));\n        return res.redirect(307, redirectTo);\n    }\n    /**\n     * Helper method to generate the Auth Cookie string for you in case you can't use `setAuthCookie`.\n     * @param req The request object.\n     * @param res The response object.\n     * @returns The Cookie string that needs to be set as the value for the `Set-Cookie` header.\n     */\n    getAuthCookieString(req, res) {\n        if (req.method !== 'POST') {\n            res.setHeader('Allow', 'POST');\n            res.status(405).end('Method Not Allowed');\n        }\n        const { event, session } = req.body;\n        if (!event)\n            throw new Error('Auth event missing!');\n        if (event === 'SIGNED_IN') {\n            if (!session)\n                throw new Error('Auth session missing!');\n            return getCookieString(req, res, [\n                { key: 'access-token', value: session.access_token },\n                { key: 'refresh-token', value: session.refresh_token },\n            ].map((token) => {\n                var _a;\n                return ({\n                    name: `${this.cookieName()}-${token.key}`,\n                    value: token.value,\n                    domain: this.cookieOptions.domain,\n                    maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                    path: this.cookieOptions.path,\n                    sameSite: this.cookieOptions.sameSite,\n                });\n            }));\n        }\n        if (event === 'SIGNED_OUT') {\n            return getCookieString(req, res, ['access-token', 'refresh-token'].map((key) => ({\n                name: `${this.cookieName()}-${key}`,\n                value: '',\n                maxAge: -1,\n            })));\n        }\n        return res.getHeader('Set-Cookie');\n    }\n    /**\n     * Generates links to be sent via email or other.\n     * @param type The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     * @param email The user's email.\n     * @param password User password. For signup only.\n     * @param data Optional user metadata. For signup only.\n     * @param redirectTo The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     */\n    generateLink(type, email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/generate_link`, {\n                    type,\n                    email,\n                    password: options.password,\n                    data: options.data,\n                    redirect_to: options.redirectTo,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param attributes The data you want to create the user with.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/users`, attributes, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    listUsers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users`, {\n                    headers: this.headers,\n                });\n                return { data: data.users, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get user by reading the cookie from the request.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     */\n    getUserByCookie(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!req.cookies) {\n                    throw new Error('Not able to parse cookies! When using Express make sure the cookie-parser middleware is in use!');\n                }\n                const access_token = req.cookies[`${this.cookieName()}-access-token`];\n                const refresh_token = req.cookies[`${this.cookieName()}-refresh-token`];\n                if (!access_token) {\n                    throw new Error('No cookie found!');\n                }\n                const { user, error: getUserError } = yield this.getUser(access_token);\n                if (getUserError) {\n                    if (!refresh_token)\n                        throw new Error('No refresh_token cookie found!');\n                    if (!res)\n                        throw new Error('You need to pass the res object to automatically refresh the session!');\n                    const { data, error } = yield this.refreshAccessToken(refresh_token);\n                    if (error) {\n                        throw error;\n                    }\n                    else if (data) {\n                        setCookies(req, res, [\n                            { key: 'access-token', value: data.access_token },\n                            { key: 'refresh-token', value: data.refresh_token },\n                        ].map((token) => {\n                            var _a;\n                            return ({\n                                name: `${this.cookieName()}-${token.key}`,\n                                value: token.value,\n                                domain: this.cookieOptions.domain,\n                                maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                                path: this.cookieOptions.path,\n                                sameSite: this.cookieOptions.sameSite,\n                            });\n                        }));\n                        return { token: data.access_token, user: data.user, data: data.user, error: null };\n                    }\n                }\n                return { token: access_token, user: user, data: user, error: null };\n            }\n            catch (e) {\n                return { token: null, user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this; //\n                const data = yield put(this.fetch, `${this.url}/admin/users/${uid}`, attributes, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param uid The user uid you want to remove.\n     */\n    deleteUser(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/admin/users/${uid}`, {}, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Gets the current user details.\n     *\n     * This method is called by the GoTrueClient `update` where\n     * the jwt is set to this.currentSession.access_token\n     * and therefore, acts like getting the currently authenticated used\n     *\n     * @param jwt A valid, logged-in JWT. Typically, the access_token for the currentSession\n     */\n    getUser(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/user`, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     * @param jwt A valid, logged-in JWT.\n     * @param attributes The data you want to update.\n     */\n    updateUser(jwt, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/user`, attributes, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueApi from './GoTrueApi';\nimport { isBrowser, getParameterByName, uuid, setItemAsync, removeItemAsync, getItemSynchronously, getItemAsync, } from './lib/helpers';\nimport { GOTRUE_URL, DEFAULT_HEADERS, STORAGE_KEY, EXPIRY_MARGIN, NETWORK_FAILURE, } from './lib/constants';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param options.url The URL of the GoTrue server.\n     * @param options.headers Any additional headers to send to the GoTrue server.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.localStorage Provide your own local storage implementation to use instead of the browser's local storage.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.cookieOptions\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(options) {\n        this.stateChangeEmitters = new Map();\n        this.networkRetries = 0;\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.currentUser = null;\n        this.currentSession = null;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.multiTab = settings.multiTab;\n        this.localStorage = settings.localStorage || globalThis.localStorage;\n        this.api = new GoTrueApi({\n            url: settings.url,\n            headers: settings.headers,\n            cookieOptions: settings.cookieOptions,\n            fetch: settings.fetch,\n        });\n        this._recoverSession();\n        this._recoverAndRefresh();\n        this._listenForMultiTabEvents();\n        this._handleVisibilityChange();\n        if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n            // Handle the OAuth redirect\n            this.getSessionFromUrl({ storeSession: true }).then(({ error }) => {\n                if (error) {\n                    console.error('Error getting session from URL.', error);\n                }\n            });\n        }\n    }\n    /**\n     * Creates a new user.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param phone The user's phone number.\n     * @param redirectTo The redirect URL attached to the signup confirmation link. Does not redirect the user if it's a mobile signup.\n     * @param data Optional user metadata.\n     */\n    signUp({ email, password, phone }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = phone && password\n                    ? yield this.api.signUpWithPhone(phone, password, {\n                        data: options.data,\n                        captchaToken: options.captchaToken,\n                    })\n                    : yield this.api.signUpWithEmail(email, password, {\n                        redirectTo: options.redirectTo,\n                        data: options.data,\n                        captchaToken: options.captchaToken,\n                    });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on sign up.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in an existing user, or login via a third-party provider.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param phone The user's phone number.\n     * @param password The user's password.\n     * @param refreshToken A valid refresh token that was returned on login.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL to send the user to after they are confirmed (OAuth logins only).\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    signIn({ email, phone, password, refreshToken, provider, oidc }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                if (email && !password) {\n                    const { error } = yield this.api.sendMagicLinkEmail(email, {\n                        redirectTo: options.redirectTo,\n                        shouldCreateUser: options.shouldCreateUser,\n                        captchaToken: options.captchaToken,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (email && password) {\n                    return this._handleEmailSignIn(email, password, {\n                        redirectTo: options.redirectTo,\n                    });\n                }\n                if (phone && !password) {\n                    const { error } = yield this.api.sendMobileOTP(phone, {\n                        shouldCreateUser: options.shouldCreateUser,\n                        captchaToken: options.captchaToken,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (phone && password) {\n                    return this._handlePhoneSignIn(phone, password);\n                }\n                if (refreshToken) {\n                    // currentSession and currentUser will be updated to latest on _callRefreshToken using the passed refreshToken\n                    const { error } = yield this._callRefreshToken(refreshToken);\n                    if (error)\n                        throw error;\n                    return {\n                        user: this.currentUser,\n                        session: this.currentSession,\n                        error: null,\n                    };\n                }\n                if (provider) {\n                    return this._handleProviderSignIn(provider, {\n                        redirectTo: options.redirectTo,\n                        scopes: options.scopes,\n                        queryParams: options.queryParams,\n                    });\n                }\n                if (oidc) {\n                    return this._handleOpenIDConnectSignIn(oidc);\n                }\n                throw new Error(`You must provide either an email, phone number, a third-party provider or OpenID Connect.`);\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     * @param email The user's email address.\n     * @param phone The user's phone number.\n     * @param token The user's password.\n     * @param type The user's verification type.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyOTP(params, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = yield this.api.verifyOTP(params, options);\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on token verification.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n     *\n     * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n     */\n    user() {\n        return this.currentUser;\n    }\n    /**\n     * Returns the session data, if there is an active session.\n     */\n    session() {\n        return this.currentSession;\n    }\n    /**\n     * Force refreshes the session including the user data in case it was updated in a different session.\n     */\n    refreshSession() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                // currentSession and currentUser will be updated to latest on _callRefreshToken\n                const { error } = yield this._callRefreshToken();\n                if (error)\n                    throw error;\n                return { data: this.currentSession, user: this.currentUser, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates user data, if there is a logged in user.\n     */\n    update(attributes) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                const { user, error } = yield this.api.updateUser(this.currentSession.access_token, attributes);\n                if (error)\n                    throw error;\n                if (!user)\n                    throw Error('Invalid user data.');\n                const session = Object.assign(Object.assign({}, this.currentSession), { user });\n                this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED');\n                return { data: user, user, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sets the session data from refresh_token and returns current Session and Error\n     * @param refresh_token a JWT token\n     */\n    setSession(refresh_token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error) {\n                    return { session: null, error: error };\n                }\n                this._saveSession(data);\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { session: data, error: null };\n            }\n            catch (e) {\n                return { error: e, session: null };\n            }\n        });\n    }\n    /**\n     * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n     * @param access_token a jwt access token\n     */\n    setAuth(access_token) {\n        this.currentSession = Object.assign(Object.assign({}, this.currentSession), { access_token, token_type: 'bearer', user: this.user() });\n        this._notifyAllSubscribers('TOKEN_REFRESHED');\n        return this.currentSession;\n    }\n    /**\n     * Gets the session data from a URL string\n     * @param options.storeSession Optionally store the session in the browser\n     */\n    getSessionFromUrl(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new Error('No browser detected.');\n                const error_description = getParameterByName('error_description');\n                if (error_description)\n                    throw new Error(error_description);\n                const provider_token = getParameterByName('provider_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new Error('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new Error('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new Error('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new Error('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { user, error } = yield this.api.getUser(access_token);\n                if (error)\n                    throw error;\n                const session = {\n                    provider_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user: user,\n                };\n                if (options === null || options === void 0 ? void 0 : options.storeSession) {\n                    this._saveSession(session);\n                    const recoveryMode = getParameterByName('type');\n                    this._notifyAllSubscribers('SIGNED_IN');\n                    if (recoveryMode === 'recovery') {\n                        this._notifyAllSubscribers('PASSWORD_RECOVERY');\n                    }\n                }\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n     *\n     * For server-side management, you can disable sessions by passing a JWT through to `auth.api.signOut(JWT: string)`\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessToken = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token;\n            this._removeSession();\n            this._notifyAllSubscribers('SIGNED_OUT');\n            if (accessToken) {\n                const { error } = yield this.api.signOut(accessToken);\n                if (error)\n                    return { error };\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n     */\n    onAuthStateChange(callback) {\n        try {\n            const id = uuid();\n            const subscription = {\n                id,\n                callback,\n                unsubscribe: () => {\n                    this.stateChangeEmitters.delete(id);\n                },\n            };\n            this.stateChangeEmitters.set(id, subscription);\n            return { data: subscription, error: null };\n        }\n        catch (e) {\n            return { data: null, error: e };\n        }\n    }\n    _handleEmailSignIn(email, password, options = {}) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithEmail(email, password, {\n                    redirectTo: options.redirectTo,\n                });\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if (((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.confirmed_at) || ((_b = data === null || data === void 0 ? void 0 : data.user) === null || _b === void 0 ? void 0 : _b.email_confirmed_at)) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handlePhoneSignIn(phone, password) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithPhone(phone, password);\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if ((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.phone_confirmed_at) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handleProviderSignIn(provider, options = {}) {\n        const url = this.api.getUrlForProvider(provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams,\n        });\n        try {\n            // try to open on the browser\n            if (isBrowser()) {\n                window.location.href = url;\n            }\n            return { provider, url, data: null, session: null, user: null, error: null };\n        }\n        catch (e) {\n            // fallback to returning the URL\n            if (url)\n                return { provider, url, data: null, session: null, user: null, error: null };\n            return { data: null, user: null, session: null, error: e };\n        }\n    }\n    _handleOpenIDConnectSignIn({ id_token, nonce, client_id, issuer, provider, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (id_token && nonce && ((client_id && issuer) || provider)) {\n                try {\n                    const { data, error } = yield this.api.signInWithOpenIDConnect({\n                        id_token,\n                        nonce,\n                        client_id,\n                        issuer,\n                        provider,\n                    });\n                    if (error || !data)\n                        return { user: null, session: null, error };\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                    return { user: data.user, session: data, error: null };\n                }\n                catch (e) {\n                    return { user: null, session: null, error: e };\n                }\n            }\n            throw new Error(`You must provide a OpenID Connect provider with your id token and nonce.`);\n        });\n    }\n    /**\n     * Attempts to get the session from LocalStorage\n     * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n     */\n    _recoverSession() {\n        try {\n            const data = getItemSynchronously(this.localStorage, STORAGE_KEY);\n            if (!data)\n                return null;\n            const { currentSession, expiresAt } = data;\n            const timeNow = Math.round(Date.now() / 1000);\n            if (expiresAt >= timeNow + EXPIRY_MARGIN && (currentSession === null || currentSession === void 0 ? void 0 : currentSession.user)) {\n                this._saveSession(currentSession);\n                this._notifyAllSubscribers('SIGNED_IN');\n            }\n        }\n        catch (error) {\n            console.log('error', error);\n        }\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield getItemAsync(this.localStorage, STORAGE_KEY);\n                if (!data)\n                    return null;\n                const { currentSession, expiresAt } = data;\n                const timeNow = Math.round(Date.now() / 1000);\n                if (expiresAt < timeNow + EXPIRY_MARGIN) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        this.networkRetries++;\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            if (error.message === NETWORK_FAILURE.ERROR_MESSAGE &&\n                                this.networkRetries < NETWORK_FAILURE.MAX_RETRIES) {\n                                if (this.refreshTokenTimer)\n                                    clearTimeout(this.refreshTokenTimer);\n                                this.refreshTokenTimer = setTimeout(() => this._recoverAndRefresh(), Math.pow(NETWORK_FAILURE.RETRY_INTERVAL, this.networkRetries) * 100 // exponential backoff\n                                );\n                                return;\n                            }\n                            yield this._removeSession();\n                        }\n                        this.networkRetries = 0;\n                    }\n                    else {\n                        this._removeSession();\n                    }\n                }\n                else if (!currentSession) {\n                    console.log('Current session is missing data.');\n                    this._removeSession();\n                }\n                else {\n                    // should be handled on _recoverSession method already\n                    // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n                    this._saveSession(currentSession);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return null;\n            }\n        });\n    }\n    _callRefreshToken(refresh_token) {\n        var _a;\n        if (refresh_token === void 0) { refresh_token = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.refresh_token; }\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error)\n                    throw error;\n                if (!data)\n                    throw Error('Invalid session data.');\n                this._saveSession(data);\n                this._notifyAllSubscribers('TOKEN_REFRESHED');\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    _notifyAllSubscribers(event) {\n        this.stateChangeEmitters.forEach((x) => x.callback(event, this.currentSession));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        this.currentSession = session;\n        this.currentUser = session.user;\n        const expiresAt = session.expires_at;\n        if (expiresAt) {\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = expiresAt - timeNow;\n            const refreshDurationBeforeExpires = expiresIn > EXPIRY_MARGIN ? EXPIRY_MARGIN : 0.5;\n            this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000);\n        }\n        // Do we need any extra check before persist session\n        // access_token or user ?\n        if (this.persistSession && session.expires_at) {\n            this._persistSession(this.currentSession);\n        }\n    }\n    _persistSession(currentSession) {\n        const data = { currentSession, expiresAt: currentSession.expires_at };\n        setItemAsync(this.localStorage, STORAGE_KEY, data);\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.currentSession = null;\n            this.currentUser = null;\n            if (this.refreshTokenTimer)\n                clearTimeout(this.refreshTokenTimer);\n            removeItemAsync(this.localStorage, STORAGE_KEY);\n        });\n    }\n    /**\n     * Clear and re-create refresh token timer\n     * @param value time intervals in milliseconds\n     */\n    _startAutoRefreshToken(value) {\n        if (this.refreshTokenTimer)\n            clearTimeout(this.refreshTokenTimer);\n        if (value <= 0 || !this.autoRefreshToken)\n            return;\n        this.refreshTokenTimer = setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n            this.networkRetries++;\n            const { error } = yield this._callRefreshToken();\n            if (!error)\n                this.networkRetries = 0;\n            if ((error === null || error === void 0 ? void 0 : error.message) === NETWORK_FAILURE.ERROR_MESSAGE &&\n                this.networkRetries < NETWORK_FAILURE.MAX_RETRIES)\n                this._startAutoRefreshToken(Math.pow(NETWORK_FAILURE.RETRY_INTERVAL, this.networkRetries) * 100); // exponential backoff\n        }), value);\n        if (typeof this.refreshTokenTimer.unref === 'function')\n            this.refreshTokenTimer.unref();\n    }\n    /**\n     * Listens for changes to LocalStorage and updates the current session.\n     */\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            return false;\n        }\n        try {\n            window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    if ((_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) {\n                        this._saveSession(newSession.currentSession);\n                        this._notifyAllSubscribers('SIGNED_IN');\n                    }\n                    else {\n                        this._removeSession();\n                        this._notifyAllSubscribers('SIGNED_OUT');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n        }\n    }\n    _handleVisibilityChange() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            return false;\n        }\n        try {\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', () => {\n                if (document.visibilityState === 'visible') {\n                    this._recoverAndRefresh();\n                }\n            });\n        }\n        catch (error) {\n            console.error('_handleVisibilityChange', error);\n        }\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport class PostgrestBuilder {\n    constructor(builder) {\n        Object.assign(this, builder);\n        let _fetch;\n        if (builder.fetch) {\n            _fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            _fetch = (...args) => __awaiter(this, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n        }\n        else {\n            _fetch = fetch;\n        }\n        this.fetch = (...args) => _fetch(...args);\n        this.shouldThrowOnError = builder.shouldThrowOnError || false;\n        this.allowEmpty = builder.allowEmpty || false;\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError(throwOnError) {\n        if (throwOnError === null || throwOnError === undefined) {\n            throwOnError = true;\n        }\n        this.shouldThrowOnError = throwOnError;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (typeof this.schema === 'undefined') {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        let res = this.fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then((res) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                const isReturnMinimal = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.split(',').includes('return=minimal');\n                if (this.method !== 'HEAD' && !isReturnMinimal) {\n                    const text = yield res.text();\n                    if (!text) {\n                        // discard `text`\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = text;\n                    }\n                    else {\n                        data = JSON.parse(text);\n                    }\n                }\n                const countHeader = (_b = this.headers['Prefer']) === null || _b === void 0 ? void 0 : _b.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_c = res.headers.get('content-range')) === null || _c === void 0 ? void 0 : _c.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n            }\n            else {\n                const body = yield res.text();\n                try {\n                    error = JSON.parse(body);\n                }\n                catch (_e) {\n                    error = {\n                        message: body,\n                    };\n                }\n                if (error && this.allowEmpty && ((_d = error === null || error === void 0 ? void 0 : error.details) === null || _d === void 0 ? void 0 : _d.includes('Results contain 0 rows'))) {\n                    error = null;\n                    status = 200;\n                    statusText = 'OK';\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText,\n                body: data,\n            };\n            return postgrestResponse;\n        }));\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => ({\n                error: {\n                    message: `FetchError: ${fetchError.message}`,\n                    details: '',\n                    hint: '',\n                    code: fetchError.code || '',\n                },\n                data: null,\n                body: null,\n                count: null,\n                status: 400,\n                statusText: 'Bad Request',\n            }));\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=types.js.map","import { PostgrestBuilder } from './types';\n/**\n * Post-filters (transforms)\n */\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     */\n    select(columns = '*') {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        return this;\n    }\n    /**\n     * Orders the result with the specified `column`.\n     *\n     * @param column  The column to order on.\n     * @param ascending  If `true`, the result will be in ascending order.\n     * @param nullsFirst  If `true`, `null`s appear first.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    order(column, { ascending = true, nullsFirst = false, foreignTable, } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'order' : `${foreignTable}.order`;\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}.${nullsFirst ? 'nullsfirst' : 'nullslast'}`);\n        return this;\n    }\n    /**\n     * Limits the result with the specified `count`.\n     *\n     * @param count  The maximum no. of rows to limit to.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limits the result to rows within the specified range, inclusive.\n     *\n     * @param from  The starting index from which to limit the result, inclusive.\n     * @param to  The last index to which to limit the result, inclusive.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Sets the AbortSignal for the fetch request.\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Retrieves only one row from the result. Result must be one row (e.g. using\n     * `limit`), otherwise this will result in an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Retrieves at most one row from the result. Result must be at most one row\n     * (e.g. using `eq` on a UNIQUE column), otherwise this will result in an\n     * error.\n     */\n    maybeSingle() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        this.allowEmpty = true;\n        return this;\n    }\n    /**\n     * Set the response type to CSV.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    constructor() {\n        super(...arguments);\n        /** @deprecated Use `contains()` instead. */\n        this.cs = this.contains;\n        /** @deprecated Use `containedBy()` instead. */\n        this.cd = this.containedBy;\n        /** @deprecated Use `rangeLt()` instead. */\n        this.sl = this.rangeLt;\n        /** @deprecated Use `rangeGt()` instead. */\n        this.sr = this.rangeGt;\n        /** @deprecated Use `rangeGte()` instead. */\n        this.nxl = this.rangeGte;\n        /** @deprecated Use `rangeLte()` instead. */\n        this.nxr = this.rangeLte;\n        /** @deprecated Use `rangeAdjacent()` instead. */\n        this.adj = this.rangeAdjacent;\n        /** @deprecated Use `overlaps()` instead. */\n        this.ov = this.overlaps;\n    }\n    /**\n     * Finds all rows which doesn't satisfy the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows satisfying at least one of the filters.\n     *\n     * @param filters  The filters to use, separated by commas.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'or' : `${foreignTable}.or`;\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` exactly matches the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    eq(column, value) {\n        this.url.searchParams.append(`${column}`, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` doesn't match the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    neq(column, value) {\n        this.url.searchParams.append(`${column}`, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gt(column, value) {\n        this.url.searchParams.append(`${column}`, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than or\n     * equal to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gte(column, value) {\n        this.url.searchParams.append(`${column}`, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lt(column, value) {\n        this.url.searchParams.append(`${column}`, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than or equal\n     * to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lte(column, value) {\n        this.url.searchParams.append(`${column}`, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case sensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(`${column}`, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case insensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(`${column}`, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * A check for exact equality (null, true, false), finds all rows whose\n     * value on the stated `column` exactly match the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    is(column, value) {\n        this.url.searchParams.append(`${column}`, `is.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is found on the\n     * specified `values`.\n     *\n     * @param column  The column to filter on.\n     * @param values  The values to filter with.\n     */\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(`${column}`, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column`\n     * contains the values specified in `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(`${column}`, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column` is\n     * contained by the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to the\n     * left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(`${column}`, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to\n     * the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(`${column}`, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is adjacent to\n     * the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(`${column}`, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose array or range value on the stated `column` overlaps\n     * (has a value in common) with the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(`${column}`, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose text or tsvector value on the stated `column` matches\n     * the tsquery in `query`.\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     * @param type  The type of tsquery conversion to use on `query`.\n     */\n    textSearch(column, query, { config, type = null, } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` instead.\n     */\n    fts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * plainto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'plain'` instead.\n     */\n    plfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `plfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * phraseto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'phrase'` instead.\n     */\n    phfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `phfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * websearch_to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'websearch'` instead.\n     */\n    wfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `wfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose `column` satisfies the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose columns match the specified `query` object.\n     *\n     * @param query  The object to filter with, with column names as keys mapped\n     *               to their filter values.\n     */\n    match(query) {\n        Object.keys(query).forEach((key) => {\n            this.url.searchParams.append(`${key}`, `eq.${query[key]}`);\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, shouldThrowOnError, } = {}) {\n        super({ fetch, shouldThrowOnError });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     * @param head  When set to true, select will void data.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    select(columns = '*', { head = false, count = null, } = {}) {\n        this.method = 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        if (head) {\n            this.method = 'HEAD';\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    insert(values, { upsert = false, onConflict, returning = 'representation', count = null, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [`return=${returning}`];\n        if (upsert)\n            prefersHeaders.push('resolution=merge-duplicates');\n        if (upsert && onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPSERT into the table.\n     *\n     * @param values  The values to insert.\n     * @param onConflict  By specifying the `on_conflict` query parameter, you can make UPSERT work on a column(s) that has a UNIQUE constraint.\n     * @param returning  By default the new record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     * @param ignoreDuplicates  Specifies if duplicate rows should be ignored and not inserted.\n     */\n    upsert(values, { onConflict, returning = 'representation', count = null, ignoreDuplicates = false, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [\n            `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`,\n            `return=${returning}`,\n        ];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPDATE on the table.\n     *\n     * @param values  The values to update.\n     * @param returning  By default the updated record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    update(values, { returning = 'representation', count = null, } = {}) {\n        this.method = 'PATCH';\n        const prefersHeaders = [`return=${returning}`];\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs a DELETE on the table.\n     *\n     * @param returning  If `true`, return the deleted row(s) in the response.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    delete({ returning = 'representation', count = null, } = {}) {\n        this.method = 'DELETE';\n        const prefersHeaders = [`return=${returning}`];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestRpcBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, shouldThrowOnError, } = {}) {\n        super({ fetch, shouldThrowOnError });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Perform a function call.\n     */\n    rpc(params, { head = false, count = null, } = {}) {\n        if (head) {\n            this.method = 'HEAD';\n            if (params) {\n                Object.entries(params).forEach(([name, value]) => {\n                    this.url.searchParams.append(name, value);\n                });\n            }\n        }\n        else {\n            this.method = 'POST';\n            this.body = params;\n        }\n        if (count) {\n            if (this.headers['Prefer'] !== undefined)\n                this.headers['Prefer'] += `,count=${count}`;\n            else\n                this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestRpcBuilder.js.map","// generated by genversion\nexport const version = '0.37.4';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` };\n//# sourceMappingURL=constants.js.map","import PostgrestQueryBuilder from './lib/PostgrestQueryBuilder';\nimport PostgrestRpcBuilder from './lib/PostgrestRpcBuilder';\nimport { DEFAULT_HEADERS } from './lib/constants';\nexport default class PostgrestClient {\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url  URL of the PostgREST endpoint.\n     * @param headers  Custom headers.\n     * @param schema  Postgres schema to switch to.\n     */\n    constructor(url, { headers = {}, schema, fetch, throwOnError, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.schema = schema;\n        this.fetch = fetch;\n        this.shouldThrowOnError = throwOnError;\n    }\n    /**\n     * Authenticates the request with JWT.\n     *\n     * @param token  The JWT token to use.\n     */\n    auth(token) {\n        this.headers['Authorization'] = `Bearer ${token}`;\n        return this;\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table  The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.url}/${table}`;\n        return new PostgrestQueryBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            shouldThrowOnError: this.shouldThrowOnError,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head  When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const url = `${this.url}/rpc/${fn}`;\n        return new PostgrestRpcBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            shouldThrowOnError: this.shouldThrowOnError,\n        }).rpc(params, { head, count });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\n//# sourceMappingURL=transformers.js.map","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","export const version = '1.7.2';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` };\nexport const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nexport var CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\n//# sourceMappingURL=constants.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nimport RealtimeSubscription from '../RealtimeSubscription';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n        });\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket.makeRef();\n        this.refEvent = this.channel.replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        if (this.channel instanceof RealtimeSubscription) {\n            this.channel.on(this.refEvent, callback);\n        }\n        else {\n            this.channel.on(this.refEvent, {}, callback);\n        }\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel.trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        if (this.channel instanceof RealtimeSubscription) {\n            this.channel.off(this.refEvent);\n        }\n        else {\n            this.channel.off(this.refEvent, {});\n        }\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nexport default class RealtimeSubscription {\n    constructor(topic, params = {}, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = [];\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this.rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this.onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket.remove(this);\n        });\n        this.onError((reason) => {\n            if (this.isLeaving() || this.isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this.isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n            this.trigger(this.replyEventName(ref), payload);\n        });\n    }\n    rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this.rejoin();\n        }\n    }\n    subscribe(timeout = this.timeout) {\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            this.joinedOnce = true;\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }\n    onClose(callback) {\n        this.on(CHANNEL_EVENTS.close, callback);\n    }\n    onError(callback) {\n        this.on(CHANNEL_EVENTS.error, (reason) => callback(reason));\n    }\n    on(event, callback) {\n        this.bindings.push({ event, callback });\n    }\n    off(event) {\n        this.bindings = this.bindings.filter((bind) => bind.event !== event);\n    }\n    canPush() {\n        return this.socket.isConnected() && this.isJoined();\n    }\n    push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this.canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        let onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef());\n        };\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n        leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose());\n        leavePush.send();\n        if (!this.canPush()) {\n            leavePush.trigger('ok', {});\n        }\n        return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n    onMessage(event, payload, ref) {\n        return payload;\n    }\n    isMember(topic) {\n        return this.topic === topic;\n    }\n    joinRef() {\n        return this.joinPush.ref;\n    }\n    rejoin(timeout = this.timeout) {\n        if (this.isLeaving()) {\n            return;\n        }\n        this.socket.leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    trigger(event, payload, ref) {\n        let { close, error, leave, join } = CHANNEL_EVENTS;\n        let events = [close, error, leave, join];\n        if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n            return;\n        }\n        let handledPayload = this.onMessage(event, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        this.bindings\n            .filter((bind) => {\n            // Bind all events if the user specifies a wildcard.\n            if (bind.event === '*') {\n                return event === (payload === null || payload === void 0 ? void 0 : payload.type);\n            }\n            else {\n                return bind.event === event;\n            }\n        })\n            .map((bind) => bind.callback(handledPayload, ref));\n    }\n    replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    isErrored() {\n        return this.state === CHANNEL_STATES.errored;\n    }\n    isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n}\n//# sourceMappingURL=RealtimeSubscription.js.map","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport default class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeSubscription\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel.on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel.joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel.on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceIds = newPresences.map((m) => m.presence_id);\n                const curPresenceIds = currentPresences.map((m) => m.presence_id);\n                const joinedPresences = newPresences.filter((m) => curPresenceIds.indexOf(m.presence_id) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceIds.indexOf(m.presence_id) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            const currentPresences = state[key];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences) {\n                const joinedPresenceIds = state[key].map((m) => m.presence_id);\n                const curPresences = currentPresences.filter((m) => joinedPresenceIds.indexOf(m.presence_id) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceIdsToRemove = leftPresences.map((m) => m.presence_id);\n            currentPresences = currentPresences.filter((m) => presenceIdsToRemove.indexOf(m.presence_id) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /**\n     * Returns the array of presences, with selected metadata.\n     */\n    static list(presences, chooser) {\n        if (!chooser) {\n            chooser = (_key, pres) => pres;\n        }\n        return this.map(presences, (key, presences) => chooser(key, presences));\n    }\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_id'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_id: '2', user_id: 1 },\n     *    { presence_id: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_id'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    list(by) {\n        return RealtimePresence.list(this.state, by);\n    }\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel.joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nimport RealtimePresence from './RealtimePresence';\nexport default class RealtimeChannel {\n    constructor(topic, params = {}, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = [];\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this.rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this.onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket.remove(this);\n        });\n        this.onError((reason) => {\n            if (this.isLeaving() || this.isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this.isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this.trigger(this.replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence(this);\n    }\n    list() {\n        return this.presence.list();\n    }\n    rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this.rejoin();\n        }\n    }\n    subscribe(timeout = this.timeout) {\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            const configs = this.bindings.reduce((acc, binding) => {\n                const { type } = binding;\n                if (![\n                    'phx_close',\n                    'phx_error',\n                    'phx_reply',\n                    'presence_diff',\n                    'presence_state',\n                ].includes(type)) {\n                    acc[type] = binding;\n                }\n                return acc;\n            }, {});\n            if (Object.keys(configs).length) {\n                this.updateJoinPayload({ configs });\n            }\n            this.joinedOnce = true;\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     */\n    onClose(callback) {\n        this.on(CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     */\n    onError(callback) {\n        this.on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    on(type, filter, callback) {\n        this.bindings.push({\n            type,\n            filter: filter !== null && filter !== void 0 ? filter : {},\n            callback: callback !== null && callback !== void 0 ? callback : (() => { }),\n        });\n    }\n    off(type, filter) {\n        this.bindings = this.bindings.filter((bind) => {\n            return !(bind.type === type && RealtimeChannel.isEqual(bind.filter, filter));\n        });\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     */\n    canPush() {\n        return this.socket.isConnected() && this.isJoined();\n    }\n    push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this.canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef());\n        };\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n        leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose());\n        leavePush.send();\n        if (!this.canPush()) {\n            leavePush.trigger('ok', {});\n        }\n        return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n    onMessage(event, payload, ref) {\n        return payload;\n    }\n    isMember(topic) {\n        return this.topic === topic;\n    }\n    joinRef() {\n        return this.joinPush.ref;\n    }\n    rejoin(timeout = this.timeout) {\n        if (this.isLeaving()) {\n            return;\n        }\n        this.socket.leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    trigger(type, payload, ref) {\n        const { close, error, leave, join } = CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(type) >= 0 && ref !== this.joinRef()) {\n            return;\n        }\n        const handledPayload = this.onMessage(type, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        this.bindings\n            .filter((bind) => {\n            var _a, _b;\n            return ((bind === null || bind === void 0 ? void 0 : bind.type) === type &&\n                (((_a = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_b = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _b === void 0 ? void 0 : _b.event) === (payload === null || payload === void 0 ? void 0 : payload.event)));\n        })\n            .map((bind) => bind.callback(handledPayload, ref));\n    }\n    send(payload) {\n        const push = this.push(payload.type, payload);\n        return new Promise((resolve, reject) => {\n            push.receive('ok', () => resolve('ok'));\n            push.receive('timeout', () => reject('timeout'));\n        });\n    }\n    replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    isErrored() {\n        return this.state === CHANNEL_STATES.errored;\n    }\n    isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { w3cwebsocket } from 'websocket';\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, CONNECTION_STATE, } from './lib/constants';\nimport Timer from './lib/timer';\nimport Serializer from './lib/serializer';\nimport RealtimeSubscription from './RealtimeSubscription';\nimport RealtimeChannel from './RealtimeChannel';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.longpollerTimeout The maximum timeout of a long poll AJAX request. Defaults to 20s (double the server long poll timer).\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = w3cwebsocket;\n        this.heartbeatIntervalMs = 30000;\n        this.longpollerTimeout = 20000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        if (options === null || options === void 0 ? void 0 : options.longpollerTimeout)\n            this.longpollerTimeout = options.longpollerTimeout;\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs) ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode) ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode) ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket, unless already connected.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this.endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            // this.conn.timeout = this.longpollerTimeout // TYPE ERROR\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this.onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        return new Promise((resolve, _reject) => {\n            try {\n                if (this.conn) {\n                    this.conn.onclose = function () { }; // noop\n                    if (code) {\n                        this.conn.close(code, reason || '');\n                    }\n                    else {\n                        this.conn.close();\n                    }\n                    this.conn = null;\n                    // remove open handles\n                    this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n                    this.reconnectTimer.reset();\n                }\n                resolve({ error: null, data: true });\n            }\n            catch (error) {\n                resolve({ error: error, data: false });\n            }\n        });\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overriden.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Registers a callback for connection state change event.\n     *\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket opened.\"))\n     */\n    onOpen(callback) {\n        this.stateChangeCallbacks.open.push(callback);\n    }\n    /**\n     * Registers a callback for connection state change events.\n     *\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket closed.\"))\n     */\n    onClose(callback) {\n        this.stateChangeCallbacks.close.push(callback);\n    }\n    /**\n     * Registers a callback for connection state change events.\n     *\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen((error) => console.log(\"An error occurred\"))\n     */\n    onError(callback) {\n        this.stateChangeCallbacks.error.push(callback);\n    }\n    /**\n     * Calls a function any time a message is received.\n     *\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onMessage((message) => console.log(message))\n     */\n    onMessage(callback) {\n        this.stateChangeCallbacks.message.push(callback);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return CONNECTION_STATE.Connecting;\n            case SOCKET_STATES.open:\n                return CONNECTION_STATE.Open;\n            case SOCKET_STATES.closing:\n                return CONNECTION_STATE.Closing;\n            default:\n                return CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Retuns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === CONNECTION_STATE.Open;\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     */\n    remove(channel) {\n        this.channels = this.channels.filter((c) => c.joinRef() !== channel.joinRef());\n    }\n    channel(topic, chanParams = {}) {\n        var _a;\n        const { selfBroadcast } = chanParams, params = __rest(chanParams, [\"selfBroadcast\"]);\n        if (selfBroadcast) {\n            params.self_broadcast = selfBroadcast;\n        }\n        const chan = ((_a = this.params) === null || _a === void 0 ? void 0 : _a.vsndate) ? new RealtimeChannel(topic, params, this)\n            : new RealtimeSubscription(topic, params, this);\n        if (chan instanceof RealtimeChannel) {\n            chan.presence.onJoin((key, currentPresences, newPresences) => {\n                chan.trigger('presence', {\n                    event: 'JOIN',\n                    key,\n                    currentPresences,\n                    newPresences,\n                });\n            });\n            chan.presence.onLeave((key, currentPresences, leftPresences) => {\n                chan.trigger('presence', {\n                    event: 'LEAVE',\n                    key,\n                    currentPresences,\n                    leftPresences,\n                });\n            });\n            chan.presence.onSync(() => {\n                chan.trigger('presence', { event: 'SYNC' });\n            });\n        }\n        this.channels.push(chan);\n        return chan;\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n    push(data) {\n        const { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            callback();\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if ((ref && ref === this.pendingHeartbeatRef) ||\n                event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel.isMember(topic))\n                .forEach((channel) => channel.trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /**\n     * Returns the URL of the websocket.\n     */\n    endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     */\n    makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        this.channels.forEach((channel) => {\n            token && channel.updateJoinPayload({ user_token: token });\n            if (channel.joinedOnce && channel.isJoined()) {\n                channel.push(CHANNEL_EVENTS.access_token, { access_token: token });\n            }\n        });\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     */\n    leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c.isJoined() || c.isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    _onConnOpen() {\n        this.log('transport', `connected to ${this.endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel.trigger(CHANNEL_EVENTS.error));\n    }\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this.makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth(this.accessToken);\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","import { Transformers } from '@supabase/realtime-js';\nexport class SupabaseRealtimeClient {\n    constructor(socket, headers, schema, tableName) {\n        const chanParams = {};\n        const topic = tableName === '*' ? `realtime:${schema}` : `realtime:${schema}:${tableName}`;\n        const userToken = headers['Authorization'].split(' ')[1];\n        if (userToken) {\n            chanParams['user_token'] = userToken;\n        }\n        this.subscription = socket.channel(topic, chanParams);\n    }\n    getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n    /**\n     * The event you want to listen to.\n     *\n     * @param event The event\n     * @param callback A callback function that is called whenever the event occurs.\n     */\n    on(event, callback) {\n        this.subscription.on(event, (payload) => {\n            let enrichedPayload = {\n                schema: payload.schema,\n                table: payload.table,\n                commit_timestamp: payload.commit_timestamp,\n                eventType: payload.type,\n                new: {},\n                old: {},\n                errors: payload.errors,\n            };\n            enrichedPayload = Object.assign(Object.assign({}, enrichedPayload), this.getPayloadRecords(payload));\n            callback(enrichedPayload);\n        });\n        return this;\n    }\n    /**\n     * Enables the subscription.\n     */\n    subscribe(callback = () => { }) {\n        this.subscription.onError((e) => callback('SUBSCRIPTION_ERROR', e));\n        this.subscription.onClose(() => callback('CLOSED'));\n        this.subscription\n            .subscribe()\n            .receive('ok', () => callback('SUBSCRIBED'))\n            .receive('error', (e) => callback('SUBSCRIPTION_ERROR', e))\n            .receive('timeout', () => callback('RETRYING_AFTER_TIMEOUT'));\n        return this.subscription;\n    }\n}\n//# sourceMappingURL=SupabaseRealtimeClient.js.map","import { PostgrestQueryBuilder } from '@supabase/postgrest-js';\nimport { SupabaseRealtimeClient } from './SupabaseRealtimeClient';\nexport class SupabaseQueryBuilder extends PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, realtime, table, fetch, shouldThrowOnError, }) {\n        super(url, { headers, schema, fetch, shouldThrowOnError });\n        this._subscription = null;\n        this._realtime = realtime;\n        this._headers = headers;\n        this._schema = schema;\n        this._table = table;\n    }\n    /**\n     * Subscribe to realtime changes in your database.\n     * @param event The database event which you would like to receive updates for, or you can use the special wildcard `*` to listen to all changes.\n     * @param callback A callback that will handle the payload that is sent whenever your database changes.\n     */\n    on(event, callback) {\n        if (!this._realtime.isConnected()) {\n            this._realtime.connect();\n        }\n        if (!this._subscription) {\n            this._subscription = new SupabaseRealtimeClient(this._realtime, this._headers, this._schema, this._table);\n        }\n        return this._subscription.on(event, callback);\n    }\n}\n//# sourceMappingURL=SupabaseQueryBuilder.js.map","// generated by genversion\nexport const version = '0.0.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve(result);\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from './constants';\nimport { get, post, put, remove } from './fetch';\nimport { resolveFetch } from './helpers';\nexport class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = { public: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data: data.name, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Updates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, remove } from './fetch';\nimport { resolveFetch } from './helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield this.fetch(`${this.url}/object/${_path}`, {\n                    method,\n                    body: body,\n                    headers,\n                });\n                if (res.ok) {\n                    // const data = await res.json()\n                    // temporary fix till backend is updated to the latest storage-api version\n                    return { data: { Key: _path }, error: null };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Copies an existing file.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    copy(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/copy`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Create signed URL to download file without requiring permissions. This URL can be valid for a set number of seconds.\n     *\n     * @param path The file path to be downloaded, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     */\n    createSignedUrl(path, expiresIn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, { expiresIn }, { headers: this.headers });\n                const signedURL = `${this.url}${data.signedURL}`;\n                data = { signedURL };\n                return { data, error: null, signedURL };\n            }\n            catch (error) {\n                return { data: null, error, signedURL: null };\n            }\n        });\n    }\n    /**\n     * Create signed URLs to download files without requiring permissions. These URLs can be valid for a set number of seconds.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     */\n    createSignedUrls(paths, expiresIn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedURL: datum.signedURL ? `${this.url}${datum.signedURL}` : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Downloads a file.\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    download(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieve URLs for assets in public buckets\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    getPublicUrl(path) {\n        try {\n            const _path = this._getFinalPath(path);\n            const publicURL = `${this.url}/object/public/${_path}`;\n            const data = { publicURL };\n            return { data, error: null, publicURL };\n        }\n        catch (error) {\n            return { data: null, error, publicURL: null };\n        }\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to be deleted, including the path and file name. For example [`folder/image.png`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(id: string): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await get(`${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await post(`${this.url}/metadata/${id}`, { ...meta }, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     * @param options Search options, including `limit`, `offset`, and `sortBy`.\n     * @param parameters Fetch parameters, currently only supports `signal`, which is an AbortController's signal\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","import { StorageBucketApi, StorageFileApi } from './lib';\nexport class StorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=StorageClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helper.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { resolveFetch } from './helper';\nexport class FunctionsClient {\n    constructor(url, { headers = {}, customFetch, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @params token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - the name of the function to invoke\n     * @param invokeOptions - object with the following properties\n     * `headers`: object representing the headers to send with the request\n     * `body`: the body of the request\n     * `responseType`: how the response should be parsed. The default is `json`\n     */\n    invoke(functionName, invokeOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, body } = invokeOptions !== null && invokeOptions !== void 0 ? invokeOptions : {};\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\n                    method: 'POST',\n                    headers: Object.assign({}, this.headers, headers),\n                    body,\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    return { data: null, error: new Error(yield response.text()) };\n                }\n                let data;\n                const { responseType } = invokeOptions !== null && invokeOptions !== void 0 ? invokeOptions : {};\n                if (!responseType || responseType === 'json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'arrayBuffer') {\n                    data = yield response.arrayBuffer();\n                }\n                else if (responseType === 'blob') {\n                    data = yield response.blob();\n                }\n                else {\n                    data = yield response.text();\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { stripTrailingSlash, isBrowser } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nimport { SupabaseQueryBuilder } from './lib/SupabaseQueryBuilder';\nimport { SupabaseStorageClient } from '@supabase/storage-js';\nimport { FunctionsClient } from '@supabase/functions-js';\nimport { PostgrestClient } from '@supabase/postgrest-js';\nimport { RealtimeClient, } from '@supabase/realtime-js';\nconst DEFAULT_OPTIONS = {\n    schema: 'public',\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.headers Any additional headers to send with each network request.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.restUrl = `${_supabaseUrl}/rest/v1`;\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace('http', 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        const isPlatform = _supabaseUrl.match(/(supabase\\.co)|(supabase\\.in)/);\n        if (isPlatform) {\n            const urlParts = _supabaseUrl.split('.');\n            this.functionsUrl = `${urlParts[0]}.functions.${urlParts[1]}.${urlParts[2]}`;\n        }\n        else {\n            this.functionsUrl = `${_supabaseUrl}/functions/v1`;\n        }\n        this.schema = settings.schema;\n        this.multiTab = settings.multiTab;\n        this.fetch = settings.fetch;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), options === null || options === void 0 ? void 0 : options.headers);\n        this.shouldThrowOnError = settings.shouldThrowOnError || false;\n        this.auth = this._initSupabaseAuthClient(settings);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this._listenForAuthEvents();\n        this._listenForMultiTabEvents();\n        // In the future we might allow the user to pass in a logger to receive these events.\n        // this.realtime.onOpen(() => console.log('OPEN'))\n        // this.realtime.onClose(() => console.log('CLOSED'))\n        // this.realtime.onError((e: Error) => console.log('Socket error', e))\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new FunctionsClient(this.functionsUrl, {\n            headers: this._getAuthHeaders(),\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this._getAuthHeaders(), this.fetch);\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.restUrl}/${table}`;\n        return new SupabaseQueryBuilder(url, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            realtime: this.realtime,\n            table,\n            fetch: this.fetch,\n            shouldThrowOnError: this.shouldThrowOnError,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head   When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     *\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const rest = this._initPostgRESTClient();\n        return rest.rpc(fn, params, { head, count });\n    }\n    /**\n     * Creates a channel with Broadcast and Presence.\n     * Activated when vsndate query param is present in the WebSocket URL.\n     */\n    channel(name, opts) {\n        var _a, _b;\n        const userToken = (_b = (_a = this.auth.session()) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        if (!this.realtime.isConnected()) {\n            this.realtime.connect();\n        }\n        return this.realtime.channel(name, Object.assign(Object.assign({}, opts), { user_token: userToken }));\n    }\n    /**\n     * Closes and removes all subscriptions and returns a list of removed\n     * subscriptions and their errors.\n     */\n    removeAllSubscriptions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const allSubs = this.getSubscriptions().slice();\n            const allSubPromises = allSubs.map((sub) => this.removeSubscription(sub));\n            const allRemovedSubs = yield Promise.all(allSubPromises);\n            return allRemovedSubs.map(({ error }, i) => {\n                return {\n                    data: { subscription: allSubs[i] },\n                    error,\n                };\n            });\n        });\n    }\n    /**\n     * Closes and removes a channel and returns the number of open channels.\n     *\n     * @param channel The channel you want to close and remove.\n     */\n    removeChannel(channel) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { error } = yield this._closeSubscription(channel);\n            const allChans = this.getSubscriptions();\n            const openChanCount = allChans.filter((chan) => chan.isJoined()).length;\n            if (allChans.length === 0)\n                yield this.realtime.disconnect();\n            return { data: { openChannels: openChanCount }, error };\n        });\n    }\n    /**\n     * Closes and removes a subscription and returns the number of open subscriptions.\n     *\n     * @param subscription The subscription you want to close and remove.\n     */\n    removeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { error } = yield this._closeSubscription(subscription);\n            const allSubs = this.getSubscriptions();\n            const openSubCount = allSubs.filter((chan) => chan.isJoined()).length;\n            if (allSubs.length === 0)\n                yield this.realtime.disconnect();\n            return { data: { openSubscriptions: openSubCount }, error };\n        });\n    }\n    _closeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let error = null;\n            if (!subscription.isClosed()) {\n                const { error: unsubError } = yield this._unsubscribeSubscription(subscription);\n                error = unsubError;\n            }\n            this.realtime.remove(subscription);\n            return { error };\n        });\n    }\n    _unsubscribeSubscription(subscription) {\n        return new Promise((resolve) => {\n            subscription\n                .unsubscribe()\n                .receive('ok', () => resolve({ error: null }))\n                .receive('error', (error) => resolve({ error }))\n                .receive('timeout', () => resolve({ error: new Error('timed out') }));\n        });\n    }\n    /**\n     * Returns an array of all your subscriptions.\n     */\n    getSubscriptions() {\n        return this.realtime.channels;\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, localStorage, headers, fetch, cookieOptions, multiTab, }) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, headers), authHeaders),\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            localStorage,\n            fetch,\n            cookieOptions,\n            multiTab,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.params), { apikey: this.supabaseKey }) }));\n    }\n    _initPostgRESTClient() {\n        return new PostgrestClient(this.restUrl, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            fetch: this.fetch,\n            throwOnError: this.shouldThrowOnError,\n        });\n    }\n    _getAuthHeaders() {\n        var _a, _b;\n        const headers = Object.assign({}, this.headers);\n        const authBearer = (_b = (_a = this.auth.session()) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        headers['apikey'] = this.supabaseKey;\n        headers['Authorization'] = headers['Authorization'] || `Bearer ${authBearer}`;\n        return headers;\n    }\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            return null;\n        }\n        try {\n            return window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a, _b, _c;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    const accessToken = (_b = (_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                    const previousAccessToken = (_c = this.auth.session()) === null || _c === void 0 ? void 0 : _c.access_token;\n                    if (!accessToken) {\n                        this._handleTokenChanged('SIGNED_OUT', accessToken, 'STORAGE');\n                    }\n                    else if (!previousAccessToken && accessToken) {\n                        this._handleTokenChanged('SIGNED_IN', accessToken, 'STORAGE');\n                    }\n                    else if (previousAccessToken !== accessToken) {\n                        this._handleTokenChanged('TOKEN_REFRESHED', accessToken, 'STORAGE');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n            return null;\n        }\n    }\n    _listenForAuthEvents() {\n        let { data } = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token);\n            // Ideally we should call this.auth.recoverSession() - need to make public\n            // to trigger a \"SIGNED_IN\" event on this client.\n            if (source == 'STORAGE')\n                this.auth.setAuth(token);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n            // Token is removed\n            this.realtime.setAuth(this.supabaseKey);\n            if (source == 'STORAGE')\n                this.auth.signOut();\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport * from '@supabase/realtime-js';\n/**\n * Creates a new Supabase Client.\n */\nconst createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\nexport { createClient, SupabaseClient, };\n//# sourceMappingURL=index.js.map","import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = __api.env.SVELTE_APP_SUPABASE_URL\r\nconst supabaseAnonKey = __api.env.SVELTE_APP_SUPABASE_ANON_KEY\r\nexport const supabase = createClient(\r\n    supabaseUrl,\r\n    supabaseAnonKey\r\n    )\r\n\r\nexport default supabase;","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script lang=\"ts\">\n\timport {supabase} from \"./supabaseClient\"\n\timport {readable, get} from 'svelte/store'\n  import \"../public/tailwind.css\"\n\n\tasync function addPost(e) {\n    const formData = new FormData(e.target)\n    const {} = await supabase\n      .from('Message')\n      .insert({\n        txtmessage: formData.get('message'),\n      })\n  }\n\n  const Message = readable(null, (set) => {\n    supabase\n      .from('Message')\n      .select('*')\n      .then(({error, data}) => set(data))\n    // add subscription to supabase logic\n    const subscription = supabase\n      .from('Message')\n      .on('INSERT', (payload) => {\n        // payload.evenType\n        // payload.new\n        // payload.old\n        set([...get(Message), payload.new]) \n      })\n      .subscribe()\n    return () => supabase.removeSubscription(subscription)\n  })\n  \n</script>\n\n<main style=\"display: flex; flex-direction: column; align-items:center;\">\n\t<h2>SEND SECRET MESSAGE</h2>\n\t<form on:submit|preventDefault={addPost}>\n\t\t<textarea name=message></textarea> <br>\n\t  <button>Send</button>\n\t</form>\n\t{#if $Message}\n\t  {#each $Message.reverse() as {txtmessage}}\n\t\t<p class=\"\">{txtmessage}</p>\n\t  {/each}\n\t{:else}\n\t  Loading..\n\t{/if}\n  </main>\n\n<style>\n\t\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","set_style","key","important","style","removeProperty","setProperty","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","length","update","$$","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_destroy","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","DEFAULT_HEADERS","NETWORK_FAILURE","STORAGE_KEY","COOKIE_OPTIONS","lifetime","domain","path","sameSite","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","result","done","apply","_getErrorMessage","err","msg","message","error_description","error","JSON","stringify","_handleRequest","fetcher","method","url","body","this","params","headers","assign","_getRequestParams","ok","noResolveJson","json","catch","status","handleError","get","post","put","serializeCookie","cookie","secure","_a","_b","_c","val","opt","enc","encodeURIComponent","fieldContentRegExp","TypeError","test","str","maxAge","isNaN","isFinite","Math","floor","expires","toUTCString","httpOnly","toLowerCase","serialize","Date","now","getCookieString","req","res","cookies","strCookies","host","Error","indexOf","split","endsWith","isSecureEnvironment","previousCookies","getHeader","prototype","setCookies","setHeader","expiresAt","expiresIn","round","isBrowser","window","getParameterByName","location","href","replace","results","RegExp","exec","decodeURIComponent","resolveFetch","customFetch","_fetch","fetch","args","browserPonyfill$2","GoTrueApi","constructor","cookieOptions","_createRequestHeaders","jwt","cookieName","getUrlForProvider","provider","urlParams","redirectTo","scopes","queryParams","query","URLSearchParams","join","signUpWithEmail","email","password","queryString","gotrue_meta_security","captcha_token","captchaToken","session","expires_in","expires_at","signInWithEmail","signUpWithPhone","phone","signInWithPhone","signInWithOpenIDConnect","id_token","nonce","client_id","issuer","sendMagicLinkEmail","shouldCreateUser","create_user","sendMobileOTP","signOut","verifyMobileOTP","token","type","redirect_to","verifyOTP","inviteUserByEmail","resetPasswordForEmail","refreshAccessToken","refreshToken","refresh_token","setAuthCookie","end","event","access_token","deleteAuthCookie","redirect","getAuthCookieString","generateLink","createUser","attributes","user","listUsers","users","getUserById","uid","getUserByCookie","getUserError","getUser","updateUserById","deleteUser","remove","updateUser","globalThis","defineProperty","configurable","__magic__","self","polyfillGlobalThis","DEFAULT_OPTIONS","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","SupabaseAuthClient","stateChangeEmitters","networkRetries","settings","currentUser","currentSession","localStorage","api","_recoverSession","_recoverAndRefresh","_listenForMultiTabEvents","_handleVisibilityChange","getSessionFromUrl","storeSession","console","signUp","_removeSession","_saveSession","_notifyAllSubscribers","id","signIn","oidc","_handleEmailSignIn","_handlePhoneSignIn","_callRefreshToken","_handleProviderSignIn","_handleOpenIDConnectSignIn","refreshSession","setSession","setAuth","token_type","provider_token","parseInt","recoveryMode","hash","accessToken","onAuthStateChange","r","random","toString","subscription","set","confirmed_at","email_confirmed_at","phone_confirmed_at","storage","getItem","parse","getItemSynchronously","log","refreshTokenTimer","clearTimeout","setTimeout","pow","x","refreshDurationBeforeExpires","_startAutoRefreshToken","_persistSession","setItem","setItemAsync","removeItem","unref","addEventListener","newSession","String","newValue","visibilityState","super","PostgrestBuilder","builder","shouldThrowOnError","allowEmpty","throwOnError","onfulfilled","onrejected","schema","includes","signal","_d","count","statusText","isReturnMinimal","countHeader","match","contentRange","_e","details","fetchError","hint","code","PostgrestTransformBuilder","select","columns","quoted","cleanedColumns","searchParams","order","column","ascending","nullsFirst","foreignTable","existingOrder","limit","range","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","csv","PostgrestFilterBuilder","arguments","cs","contains","cd","containedBy","sl","rangeLt","sr","rangeGt","nxl","rangeGte","nxr","rangeLte","adj","rangeAdjacent","ov","overlaps","not","operator","or","filters","eq","neq","gt","gte","lt","lte","like","pattern","ilike","is","in","values","cleanedValues","s","isArray","textSearch","config","typePart","configPart","undefined","fts","plfts","phfts","wfts","keys","PostgrestQueryBuilder","URL","head","upsert","onConflict","returning","prefersHeaders","unshift","reduce","acc","concat","uniqueColumns","ignoreDuplicates","PostgrestRpcBuilder","rpc","entries","PostgrestClient","auth","table","PostgresTypes","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","charAt","dataType","slice","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","lastIdx","closeBrace","arr","valTrim","_globalThis","naiveFallback","global","__global__","version","require$$0","NativeWebSocket","WebSocket","MozWebSocket","W3CWebSocket","uri","protocols","prop","browser","w3cwebsocket","websocket_version","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","CONNECTION_STATE","Timer","timerCalc","timer","tries","reset","scheduleTimeout","Serializer","HEADER_LENGTH","decode","rawPayload","ArrayBuffer","_binaryDecode","buffer","view","DataView","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","topic","ref","payload","byteLength","Push","channel","timeout","sent","timeoutTimer","receivedResp","recHooks","refEvent","resend","_cancelRefEvent","send","_hasReceived","startTimeout","socket","updatePayload","receive","response","makeRef","replyEventName","_cancelTimeout","_matchReceive","RealtimeSubscription","on","trigger","destroy","off","h","bindings","state","closed","joinedOnce","pushBuffer","joinPush","rejoinTimer","rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","onClose","joinRef","onError","reason","isLeaving","isClosed","errored","isJoining","reply","isConnected","rejoin","close","bind","canPush","isJoined","updateJoinPayload","leaving","leavePush","leave","onMessage","isMember","leaveOpenTopic","joining","handledPayload","isErrored","RealtimePresence","opts","pendingDiffs","caller","onJoin","onLeave","onSync","events","diff","newState","syncState","syncDiff","inPendingSyncState","static","currentState","cloneDeep","transformedState","transformState","joins","leaves","presences","newPresences","currentPresences","newPresenceIds","presence_id","curPresenceIds","joinedPresences","leftPresences","joinedPresenceIds","curPresences","presenceIdsToRemove","chooser","_key","pres","obj","func","getOwnPropertyNames","metas","presence","list","by","RealtimeChannel","configs","binding","isEqual","obj1","obj2","k","__rest","t","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","RealtimeClient","endPoint","channels","transport","heartbeatIntervalMs","longpollerTimeout","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","open","websocket","encode","reconnectTimer","disconnect","connect","endPointURL","binaryType","onopen","_onConnOpen","onerror","_onConnError","onmessage","onConnMessage","onclose","_onConnClose","_reject","clearInterval","kind","onOpen","connectionState","readyState","connecting","Connecting","Open","closing","Closing","Closed","chanParams","selfBroadcast","self_broadcast","chan","vsndate","rawMessage","_appendParams","vsn","newRef","user_token","dupChannel","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","prefix","SupabaseRealtimeClient","tableName","userToken","getPayloadRecords","records","new","old","Transformers.convertChangeData","old_record","enrichedPayload","commit_timestamp","eventType","errors","SupabaseQueryBuilder","realtime","_subscription","_realtime","_headers","_schema","_table","parameters","DEFAULT_SEARCH_OPTIONS","sortBy","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","uploadOrUpdate","fileBody","fileOptions","Blob","FormData","cleanPath","_removeEmptyFolders","_path","_getFinalPath","Key","upload","move","fromPath","toPath","sourceKey","destinationKey","copy","createSignedUrl","signedURL","createSignedUrls","paths","datum","download","blob","getPublicUrl","publicURL","prefixes","StorageClient","listBuckets","getBucket","createBucket","public","updateBucket","emptyBucket","deleteBucket","FunctionsClient","Authorization","invoke","functionName","invokeOptions","isRelayError","responseType","arrayBuffer","SupabaseClient","supabaseUrl","supabaseKey","_supabaseUrl","restUrl","realtimeUrl","authUrl","storageUrl","urlParts","functionsUrl","_initSupabaseAuthClient","_initRealtimeClient","_listenForAuthEvents","functions","_getAuthHeaders","SupabaseStorageClient","_initPostgRESTClient","removeAllSubscriptions","allSubs","getSubscriptions","allSubPromises","sub","removeSubscription","all","removeChannel","_closeSubscription","allChans","openChanCount","openChannels","openSubCount","openSubscriptions","unsubError","_unsubscribeSubscription","authHeaders","apikey","authBearer","previousAccessToken","_handleTokenChanged","source","changedAccessToken","supabase","createClient","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","each_value","reverse","iterations","detaching","d","attribute","removeAttribute","getAttribute","setAttribute","wholeText","set_data","t_value","create_if_block","handler","main","h2","form","preventDefault","removeEventListener","Message","async","formData","txtmessage","app","$destroy","destroy_component","$on","index","splice","$set","$$props","$$set","__self__","F","DOMException","exports","support","Symbol","viewClasses","isArrayBufferView","isView","normalizeName","normalizeValue","iteratorFor","items","iterator","shift","Headers","header","consumed","bodyUsed","fileReaderReady","reader","onload","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","Uint8Array","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","_bodyFormData","_bodyArrayBuffer","readAsText","chars","fromCharCode","readArrayBufferAsText","oldValue","methods","Request","input","upcased","credentials","mode","toUpperCase","referrer","trim","bytes","Response","bodyInit","clone","redirectStatuses","RangeError","stack","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","withCredentials","setRequestHeader","onreadystatechange","polyfill","ponyfill","default","module"],"mappings":"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"}